name: Build Container For Main

on:
  push:
    paths:
      - "Dockerfile"
      - "root/**"
      - ".github/workflows/build.yml"
    branches:
      - main
  workflow_dispatch:
    inputs:
      conreq_version:
        description: "Commit to build"
        required: true

jobs:
  updates:
    name: Read Trigger
    runs-on: ubuntu-latest
    outputs:
      commit: ${{ steps.vars.outputs.commit }}
    steps:
      - name: Create VAR
        id: vars
        run: |
          if [ -z "$GITHUB_EVENT_INPUTS_CONREQ_VERSION" ]; then
            export CONREQ_VERSION=$(curl -sX GET https://api.github.com/repos/archmonger/conreq/commits/main | jq -r '. | .sha' | cut -c1-8)
            export DOCKER_TAGS=$(curl -s "https://registry.hub.docker.com/api/content/v1/repositories/public/roxedus/conreq/tags?page_size=1000")
            if echo "${DOCKER_TAGS}" | grep -q "\"main-${CONREQ_VERSION}\""; then
              echo "latest version ${CONREQ_VERSION} already built"
              echo "commit=no" >> $GITHUB_OUTPUT
            else
              echo "commit=${CONREQ_VERSION}" >> $GITHUB_OUTPUT
              echo "Commit manually built"
            fi
          else
            echo "commit=${GITHUB_EVENT_INPUTS_CONREQ_VERSION}" >> $GITHUB_OUTPUT
            echo "Commit automatically built"
          fi

  checks:
    name: Shellcheck
    runs-on: ubuntu-latest
    if: needs.updates.outputs.commit != 'no'
    needs: [updates]
    steps:
      - uses: actions/checkout@v3
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master

      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

  build:
    name: Build Container
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-20.04
    needs: [checks, updates]

    strategy:
      matrix:
        architecture: [linux-arm-v7, linux-arm64, linux-amd64]

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare
        id: prep
        env:
          conreq_commit: ${{ needs.updates.outputs.commit }}
        run: |
          ARCHITECTURE=${{ matrix.architecture }}
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "title=${GITHUB_REPOSITORY//docker-/}:${GITHUB_REF//refs\/heads\//}" >> $GITHUB_OUTPUT
          echo "revision=${conreq_commit}" >> $GITHUB_OUTPUT
          echo "source=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/tree/${GITHUB_REF//refs\/heads\//}" >> $GITHUB_OUTPUT
          echo "vendor=${{ github.repository_owner }}" >> $GITHUB_OUTPUT
          echo "url=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/blob/main/README.md" >> $GITHUB_OUTPUT
          echo "platform=${ARCHITECTURE//-/\/}" >> $GITHUB_OUTPUT
          echo "cache=$(echo ${GITHUB_REPOSITORY//docker-/}:${GITHUB_REF//refs\/heads\//}-cache-${{ matrix.architecture }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "tag=$(echo ${GITHUB_REPOSITORY//docker-/}:${GITHUB_REF//refs\/heads\//}-${conreq_commit:0:8}-${GITHUB_RUN_NUMBER}-${{ matrix.architecture }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "version=${conreq_commit}" >> $GITHUB_OUTPUT
          if [[ ! ${conreq_commit} == "no" ]]; then
            echo "build-args=CONREQ_VERSION=${conreq_commit}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          attests: type=sbom,generator=docker/buildkit-syft-scanner
          provenance: true
          platforms: ${{ steps.prep.outputs.platform }}
          file: ./Dockerfile
          cache-from: ${{ steps.prep.outputs.cache }}
          cache-to: ${{ steps.prep.outputs.cache }}
          tags: |
            ${{ steps.prep.outputs.tag }}
            ghcr.io/${{ steps.prep.outputs.tag }}
          labels: |
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.title=${{ steps.prep.outputs.title }}
            org.opencontainers.image.revision=${{ steps.prep.outputs.revision }}
            org.opencontainers.image.source=${{ steps.prep.outputs.source }}
            org.opencontainers.image.vendor=${{ steps.prep.outputs.vendor }}
            org.opencontainers.image.url=${{ steps.prep.outputs.url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
          build-args: ${{ steps.prep.outputs.build-args }}


  publish:
    runs-on: ubuntu-20.04
    needs: [build, updates]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifests for DockerHub
        env:
          conreq_commit: ${{ needs.updates.outputs.commit }}
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          IMAGE="$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]')"
          TAG=${GITHUB_REF//refs\/heads\//}
          SOURCE=${IMAGE}:${TAG}-${conreq_commit:0:8}-${GITHUB_RUN_NUMBER}
          docker buildx imagetools create -t ${IMAGE}:${TAG} ${SOURCE}-linux-amd64 ${SOURCE}-linux-arm-v7 ${SOURCE}-linux-arm64
          docker buildx imagetools create -t ${IMAGE}:${TAG}-${conreq_commit:0:8} ${SOURCE}-linux-amd64 ${SOURCE}-linux-arm-v7 ${SOURCE}-linux-arm64
          docker buildx imagetools create -t ${IMAGE}:latest ${SOURCE}-linux-amd64 ${SOURCE}-linux-arm-v7 ${SOURCE}-linux-arm64
          docker buildx imagetools create -t ${IMAGE}:conreq-${{ needs.updates.outputs.commit }} ${SOURCE}-linux-amd64 ${SOURCE}-linux-arm-v7 ${SOURCE}-linux-arm64

      - name: Create manifests for GitHub Container Registry
        env:
          conreq_commit: ${{ needs.updates.outputs.commit }}
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          IMAGE="ghcr.io/$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]')"
          TAG=${GITHUB_REF//refs\/heads\//}
          SOURCE=${IMAGE}:${TAG}-${conreq_commit:0:8}-${GITHUB_RUN_NUMBER}
          docker buildx imagetools create -t ${IMAGE}:${TAG} ${SOURCE}-linux-amd64 ${SOURCE}-linux-arm-v7 ${SOURCE}-linux-arm64
          docker buildx imagetools create -t ${IMAGE}:${TAG}-${conreq_commit:0:8} ${SOURCE}-linux-amd64 ${SOURCE}-linux-arm-v7 ${SOURCE}-linux-arm64
          docker buildx imagetools create -t ${IMAGE}:latest ${SOURCE}-linux-amd64 ${SOURCE}-linux-arm-v7 ${SOURCE}-linux-arm64
          docker buildx imagetools create -t ${IMAGE}:conreq-${{ needs.updates.outputs.commit }} ${SOURCE}-linux-amd64 ${SOURCE}-linux-arm-v7 ${SOURCE}-linux-arm64
